<!DOCTYPE html>
<html>
  <head>
   <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
<!-- <script type='text/javascript' src="https://cdn.jsdelivr.net/binaryjs/0.2.1/binary.min.js" />
<script src="//www.WebRTC-Experiment.com/RecordRTC.js"></script> -->

<script type='text/javascript'>

	var context = {};

	function updateChatLog(user,message)
	{
 	if(message)
 	{
    	var div = document.createElement('div');
      var p = document.createElement('p');
      if(user == "Watson")
      {
      div.style.backgroundColor = 'white';
      div.style.borderRadius  = '10px';
      div.style.padding = "10px";
      }
      else
      {
        div.style.backgroundColor = 'white';
        div.style.borderRadius  = '10px';
        div.style.padding = "10px";
      }
    	div.innerHTML = '<b>' + user + '</b>:' + message;
	document.getElementById("history").appendChild(div);
  document.getElementById("history").appendChild(p);
	document.getElementById("text").value = "";

	}	
	}

function sendMessage()
{
var text = document.getElementById("text").value;
console.log(text);
updateChatLog("You", text);

var payload = {};

if(text)
    { 
	payload.input = {"text" : text};
	 };

if(context)
	{
		payload.context = context;
	};

var xhr = new XMLHttpRequest();

xhr.onreadystatechange = function()
{
if(xhr.readyState == 4) {
if(xhr.status == 200){
  console.log(xhr.status);
  
var json = JSON.parse(xhr.responseText);
context = json.context;
updateChatLog("Watson", json.output.text);
}
}
}
xhr.open("POST","./conv", true);
xhr.setRequestHeader("Content-type", "application/json");
xhr.send(JSON.stringify(payload));
}

function init()
{

document.getElementById('usevoice').addEventListener("mousedown", function(e) {

document.getElementById('imgplus').src = 'Images/dictation-toggle-icon.png';
 fetch('/api/speech-to-text/token').then(function(response) {
 return response.text();
 }).then(function (token) {
 var stream = WatsonSpeech.SpeechToText.recognizeMicrophone({

 token: token,
 });

 stream.setEncoding('utf8'); // get text instead of Buffers for on data events
 stream.on('data', function(data) {

 document.querySelector('#text').value = data;

 });
 stream.on('error', function(err) {
 console.log(err);
 });

 document.querySelector('#usevoice').onmouseup = stream.stop.bind(stream);

document.getElementById('usevoice').addEventListener("mouseup", function(e) {
  document.getElementById('imgplus').src  = 'Images/dictation-icon.png';
  
});


 }).catch(function(error) {
 console.log(error);
 });
 });


document.getElementById("text").addEventListener("keydown" , function(e)
{
  if(!e) { 
  	var e = window.event;
  }
   if(e.KeyCode == 13) {
   	sendMessage();
   }
} ,false);

sendMessage();
}


  function chngimg() {
        var img = document.getElementById('imgplus').src;
        if (img.indexOf('dictation-toggle-icon.png')!=-1) {
        
            document.getElementById('imgplus').src  = 'Images/dictation-icon.png';
        }
         else {
      
     
           document.getElementById('imgplus').src = 'Images/dictation-toggle-icon.png';
       }

    }
</script>
 <script type="text/javascript" src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/d3/2.10.0/d3.v2.min.js"></script>
<script type="text/javascript" src="/javascripts/watson-speech.js"></script>
<script>


</script>


  </head>
  <body onload = "init()">
<div  class="col-md-12 jumbotron">
<div class="col-md-12 offset-md-1" style="color:orange; font-size:26px; background-color:#153260">Welcome to our Boot Camp! You can say Hi to me and start your conversation</div>

<div class="col-md-10 offset-md-5"><input id="text" type="text" id="text" name="text" size="100" /> 
<button  class="btn btn-primary" onclick="sendMessage()">Send</button></div>
<div  class="col-md-12">

<img id="imgplus" alt="" src="/images/dictation-icon.png" onmouseover="this.style.cursor='pointer'" style="height:50; width:50"  />

</div>

  <div>
  <div class="col-md-2 col-md-2">
              <button  type="button" id="usevoice" class="btn-primary btn btn-block use-voice">Speak</button>
            </div>
  
</div> 


<div class="col-md-12" style="color:orange; font-size:26px; background-color:#153260"><b>Conversation History</b></div>
<p/><div style="border:1px;border-radius:10px;" class="col-md-12" id="history" ></div>
</div>
  </body>
</html>
