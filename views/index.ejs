<!DOCTYPE html>
<html>
  <head>
   <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
<script type='text/javascript' src="https://cdn.jsdelivr.net/binaryjs/0.2.1/binary.min.js" />
<script src="//www.WebRTC-Experiment.com/RecordRTC.js"></script>

<script type='text/javascript'>

	var context = {};

	function updateChatLog(user,message)
	{
 	if(message)
 	{
    	var div = document.createElement('div');
      var p = document.createElement('p');
      if(user == "Watson")
      {
      div.style.backgroundColor = 'white';
      div.style.borderRadius  = '10px';
      div.style.padding = "10px";
      }
      else
      {
        div.style.backgroundColor = 'white';
        div.style.borderRadius  = '10px';
        div.style.padding = "10px";
      }
    	div.innerHTML = '<b>' + user + '</b>:' + message;
	document.getElementById("history").appendChild(div);
  document.getElementById("history").appendChild(p);
	document.getElementById("text").value = "";

	}	
	}

function sendMessage()
{
var text = document.getElementById("text").value;
updateChatLog("You", text);

var payload = {};

if(text)
    { 
	payload.input = {"text" : text};
	 };

if(context)
	{
		payload.context = context;
	};

var xhr = new XMLHttpRequest();

xhr.onreadystatechange = function()
{
if(xhr.readyState == 4) {
if(xhr.status == 200){
  console.log(xhr.status);
  
var json = JSON.parse(xhr.responseText);
context = json.context;
updateChatLog("Watson", json.output.text);
}
}
}
xhr.open("POST","./conv", true);
xhr.setRequestHeader("Content-type", "application/json");
xhr.send(JSON.stringify(payload));
}

function init()
{
document.getElementById("text").addEventListener("keydown" , function(e)
{
  if(!e) { 
  	var e = window.event;
  }
   if(e.KeyCode == 13) {
   	sendMessage();
   }
} ,false);

sendMessage();
}


  var client = new BinaryClient('ws://localhost:9001');

  client.on('open', function() {
    window.Stream = client.createStream();

    if (!navigator.getUserMedia)
      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia ||
    navigator.mozGetUserMedia || navigator.msGetUserMedia;

    if (navigator.getUserMedia) {
      navigator.getUserMedia({audio:true}, success, function(e) {
        alert('Error capturing audio.');
      });
    } else alert('getUserMedia not supported in this browser.');

    var recording = false;

    startRecording = function() {
      recording = true;
    }

    stopRecording = function() {
      recording = false;
      window.Stream.end();
    }

    function success(e) {
      audioContext = window.AudioContext || window.webkitAudioContext;
      context = new audioContext();

      // the sample rate is in context.sampleRate
      audioInput = context.createMediaStreamSource(e);

      var bufferSize = 2048;
      recorder = context.createScriptProcessor(bufferSize, 1, 1);

      recorder.onaudioprocess = function(e){
        if(!recording) return;
        console.log ('recording');
        var left = e.inputBuffer.getChannelData(0);
        window.Stream.write(convertoFloat32ToInt16(left));
      }

      audioInput.connect(recorder)
      recorder.connect(context.destination); 
    }

    function convertoFloat32ToInt16(buffer) {
      var l = buffer.length;
      var buf = new Int16Array(l)

      while (l--) {
        buf[l] = buffer[l]*0xFFFF;    //convert to 16 bit
      }
      return buf.buffer
    }
  });




  function chngimg() {
        var img = document.getElementById('imgplus').src;
        if (img.indexOf('dictation-toggle-icon.png')!=-1) {
          //stopRecording();
            document.getElementById('imgplus').src  = 'Images/dictation-icon.png';
        }
         else {
         // startRecording();
           document.getElementById('imgplus').src = 'Images/dictation-toggle-icon.png';
       }

    }
</script>
<!-- <script type='text/javascript' src="/javascripts/recorder.js" /> -->
  </head>
  <body onload = "init()">
<div  class="col-md-12 jumbotron">
<div class="col-md-12 offset-md-1" style="color:orange; font-size:26px; background-color:#153260">Welcome to our Boot Camp! You can say Hi to me and start your conversation</div>

<div class="col-md-10 offset-md-5"><input type="text" id="text" name="text" size="100" /> 
<button  class="btn btn-primary" onclick="sendMessage()">Send</button></div>
<div  class="col-md-12">

<img id="imgplus" alt="" src="/images/dictation-icon.png" onmouseover="this.style.cursor='pointer'" onclick="chngimg()" style="height:50; width:50"  />

</div>
<div class="col-md-12" style="color:orange; font-size:26px; background-color:#153260"><b>Conversation History</b></div>
<p/><div style="border:1px;border-radius:10px;" class="col-md-12" id="history" ></div>
</div>
  </body>
</html>
